apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: worker-envars-fieldref-statefulset
  labels:
    app: worker-yaml
spec:
  serviceName: worker
  podManagementPolicy: Parallel
  replicas: 125
  selector:
    matchLabels:
      app: worker-yaml
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: worker-yaml
    spec:
      containers:
        - name: tech-project-worker-image-z26m4
          #image: on-register-public
          image: public.ecr.aws/o5m1f5q7/on-register-public
          command:
            - /bin/sh
            - '-c'
          args:
            - >-
              make;
              printenv MY_NODE_NAME MY_POD_NAME
              MY_POD_NAMESPACE; printenv MY_POD_IP MY_POD_SERVICE_ACCOUNT;
              python listener.py
          env:
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: MY_POD_SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.serviceAccountName
            - name: NUMBER_OF_ROUNDS
              value: "5"
            - name: K_SAMPLE_SIZE
              value: "8"
            - name: ALPHA
              value: "0.6"
            - name: BETA
              value: "3"
            - name : REPLICAS
              value: "125"
#            - name: REPLICAS
#              valueFrom:
#                fieldRef:
#                  apiVersion: v1
#                  fieldPath: .spec.replicas
          resources: { }
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          #imagePullPolicy: IfNotPresent
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 2
      dnsPolicy: ClusterFirst
      securityContext: { }
      schedulerName: default-scheduler
#  strategy:
#    type: RollingUpdate
#    rollingUpdate:
#      maxUnavailable: 25%
#      maxSurge: 25%
  revisionHistoryLimit: 10
#  progressDeadlineSeconds: 600